#import "NSView.h"#import "NSWindow.h"#import "NSColor.h"#import "NSGraphicsContext.h"#include <Quickdraw.h>@implementation NSView-(id) initWithFrame: (NSRect)frame{	self = [super init];	if( self ) {		_frame = frame;		_subviews = [[NSMutableArray alloc] init];	}		return self;}-(void) dealloc{	[_subviews release];		[super dealloc];}-(NSColor*) backgroundColor{	return [NSColor orangeColor];}-(void) drawRect: (NSRect)dirtyRect{	Rect box = QDRectFromNSRect( [self bounds] );	FrameRect( &box );}-(void) _drawRect: (NSRect)dirtyRect withOffset: (NSPoint)pos{	GrafPtr currentPort = NULL;	int count, x;		GetPort( &currentPort );	SetOrigin( -pos.x, -pos.y );		[[self backgroundColor] set];	[NSBezierPath fillRect: [self bounds]];	[[NSColor blackColor] set];		[self drawRect: dirtyRect];	SetOrigin( 0, 0 );		count = [_subviews count];	for( x = 0; x < count; ++x )	{		NSView * currentSubview = [_subviews objectAtIndex: x];		NSPoint offset = NSMakePoint(pos.x + [currentSubview frame].origin.x, pos.y + [currentSubview frame].origin.y);		[currentSubview _drawRect: dirtyRect withOffset: offset];	}}-(NSRect) frame{	return _frame;}-(void) setFrame: (NSRect)box{	_frame = box;}-(NSRect) bounds{	return NSMakeRect( 0, 0, _frame.size.width, _frame.size.height );}-(NSMutableArray*) subviews{	return _subviews;}-(void) addSubview: (NSView*)view{	[_subviews addObject: view];	[view setSuperview: self];}-(NSView*) superview{	return _superview;}-(void) setSuperview: (NSView*)parent{	_superview = parent;}-(NSWindow*) window{	return [_superview window];}@end@implementation NSWindowContentView-(id) initWithFrame: (NSRect)box{	self = [super initWithFrame: box];	if( self ) {		_backgroundColor = [[NSColor pinkColor] retain];	}		return self;}-(void) dealloc{	[_backgroundColor release];		[super dealloc];}-(NSWindow*) window{	return _window;}-(void) setWindow:(NSWindow*)win{	_window = win;}-(NSColor*) backgroundColor{	return _backgroundColor;}-(void) setBackgroundColor: (NSColor*)c{	NSColor *oldColor = _backgroundColor;	_backgroundColor = [c retain];	[oldColor release];}@end