#import "NSWindow.h"#import "NSEvent.h"#import <MacWindows.h>#import <stdio.h>@implementation NSWindow-(id) initWithFrame: (NSRect)box title: (NSConstantString*)title{	Rect qdBox = QDRectFromNSRect(box);	self = [super init];	if( self ) {		_title = [title retain];		_macWindow = newcwindow(NULL, &qdBox,                                 [_title cString],                                 true,                                 kStandardWindowDefinition,                                 kFirstWindowOfClass,                                 true,                                 (long)self);	}		return self;}-(void) dealloc{	if( _macWindow ) {		DisposeWindow(_macWindow);		_macWindow = NULL;	}	[_title release];		[super dealloc];}-(void) draw{	RGBColor windowBackground = { 0xeeee, 0xeeee, 0xeeee };	GrafPtr oldPort = NULL;	ClipRect( &_macWindow->portRect );	GetPort( &oldPort );	SetPort( _macWindow );		RGBForeColor(&windowBackground);	PaintRect( &_macWindow->portRect );	ForeColor(blackColor);		DrawGrowIcon(_macWindow);		SetPort( oldPort );}-(void) activate{	HiliteWindow(_macWindow, true);}-(void) deactivate{	HiliteWindow(_macWindow, false);}-(NSPoint) convertPoint: (NSPoint)pos fromWindow: (NSWindow*)otherWin{	Point localPos = QDPointFromNSPoint(pos);	if( otherWin == nil ) {		GrafPtr oldPort = NULL;		GetPort( &oldPort );		SetPort(_macWindow);				GlobalToLocal( &localPos );				SetPort( oldPort );	}		return NSPointFromQDPoint(localPos);}-(void) makeKeyAndOrderFront: (id)sender{	SelectWindow( _macWindow );}-(void) mouseDown: (NSEvent*)event{	[self makeKeyAndOrderFront: self];		//printf("Mouse pressed at %f,%f\n", [event locationInWindow].x, [event locationInWindow].y);}-(void) mouseUp: (NSEvent*)event{	//printf("Mouse released at %f,%f\n", [event locationInWindow].x, [event locationInWindow].y);}-(void) performClose: (id)sender{	DisposeWindow(_macWindow);	_macWindow = NULL;}-(GrafPtr) macGraphicsPort{	return _macWindow;}@end