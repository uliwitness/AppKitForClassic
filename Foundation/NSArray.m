#import "NSArray.h"#import <stdlib.h>#import <memory.h>@implementation NSMutableArray-(void) dealloc {	unsigned x;	for( x = 0; x < _count; ++x ) {		[_storage[x] release];	}	free(_storage);	[super dealloc];}-(unsigned) count{	return _count;}-(void) addObject: (id)obj {	if( _storage == NULL ) {		_storage = malloc(sizeof(id));		if( _storage ) {			_storage[_count] = [obj retain];			++_count;		}	} else {		id* newStorage = realloc( _storage, (_count +1) * sizeof(id) );		if( newStorage ) {			_storage[_count] = [obj retain];			++_count;		}	}}-(id) objectAtIndex: (unsigned)idx {	if( idx < _count ) {		return _storage[idx];	}	return nil;}@end