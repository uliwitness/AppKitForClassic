#import "NSWindow.h"#import "NSEvent.h"#import "NSView.h"#import "NSColor.h"#import "NSGraphicsContext.h"#import <MacWindows.h>#import <stdio.h>@implementation NSWindow-(id) initWithFrame: (NSRect)box title: (NSConstantString*)title{	Rect qdBox = QDRectFromNSRect(box);	self = [super init];	if( self ) {		_title = [title retain];		_macWindow = newcwindow(NULL, &qdBox,                                 [_title cString],                                 true,                                 kStandardWindowDefinition,                                 kFirstWindowOfClass,                                 true,                                 (long)self);        _contentView = [[NSWindowContentView alloc] initWithFrame: box];        [_contentView setBackgroundColor: [NSColor lightGrayColor]];        [_contentView setWindow: self];	}		return self;}-(void) dealloc{	if( _macWindow ) {		DisposeWindow(_macWindow);		_macWindow = NULL;	}	[_title release];	[_contentView release];	[super dealloc];}-(NSColor*) backgroundColor{	return [_contentView backgroundColor];}-(void) setBackgroundColor: (NSColor*)c{	[_contentView setBackgroundColor: c];}-(void) draw{	NSGraphicsContext *newCtx = [[NSGraphicsContext alloc] initWithGraphicsPort: _macWindow];	Rect growRect = _macWindow->portRect;	NSRect windowContents = NSRectFromQDRect(_macWindow->portRect);	RgnHandle oldClip = NewRgn();	growRect.left = growRect.right - 15;	growRect.top = growRect.bottom - 15;	windowContents.origin.x = 0;	windowContents.origin.y = 0;	[NSGraphicsContext saveGraphicsState];	[NSGraphicsContext setCurrentContext: newCtx];		[_contentView setFrame: windowContents];	[_contentView _drawRect: windowContents withOffset: NSMakePoint(0, 0)];		GetClip( oldClip );	ClipRect( &growRect );	DrawGrowIcon( _macWindow );	SetClip( oldClip );		[NSGraphicsContext restoreGraphicsState];	[newCtx release];}-(void) activate{	HiliteWindow(_macWindow, true);}-(void) deactivate{	HiliteWindow(_macWindow, false);}-(NSPoint) convertPoint: (NSPoint)pos fromWindow: (NSWindow*)otherWin{	Point localPos = QDPointFromNSPoint(pos);	if( otherWin == nil ) {		GrafPtr oldPort = NULL;		GetPort( &oldPort );		SetPort(_macWindow);				GlobalToLocal( &localPos );				SetPort( oldPort );	}		return NSPointFromQDPoint(localPos);}-(void) makeKeyAndOrderFront: (id)sender{	SelectWindow( _macWindow );}-(void) mouseDown: (NSEvent*)event{	[self makeKeyAndOrderFront: self];		[_contentView _mouseDown: event];}-(void) mouseUp: (NSEvent*)event{	//printf("Mouse released at %f,%f\n", [event locationInWindow].x, [event locationInWindow].y);}-(void) performClose: (id)sender{	DisposeWindow(_macWindow);	_macWindow = NULL;}-(NSView*) contentView{	return _contentView;}-(GrafPtr) macGraphicsPort{	return _macWindow;}@end